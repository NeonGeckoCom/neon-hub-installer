---
- name: Copy Neon Node files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
    owner: neon
    group: neon
  loop:
    - {
        "src": "templates/neon-node/neon-node-requirements.j2.txt",
        "dest": "/home/neon/neon-node-requirements.txt",
      }
    - {
        "src": "templates/neon-node/start-node.py",
        "dest": "/home/neon/start-node.py",
      }
    - {
        "src": "templates/neon-node/pipewire.conf",
        "dest": "/home/neon/.config/pipewire.conf",
      }
- name: Install Neon Node voice client
  ansible.builtin.pip:
    requirements: "/home/neon/neon-node-requirements.txt"
    virtualenv: "/home/neon/.venvs/neon-node"
    extra_args: "--pre" # TODO: Remove after a stable release
- name: Register uid of neon
  command: id -u neon
  register: uid
- name: Set up Neon Node services
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: neon
    group: neon
    mode: 0644
    backup: true
  loop:
    - {
        "src": "templates/neon-node/neon-node.service.j2",
        "dest": "/home/neon/.config/systemd/user/neon-node.service",
      }
- name: Enable lingering for neon
  ansible.builtin.file:
    path: "/var/lib/systemd/linger/neon"
    owner: root
    group: root
    mode: "0644"
    modification_time: preserve
    access_time: preserve
    state: touch
- name: Enable and start Neon Node services
  become: true
  become_user: neon
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: true
    force: true
    state: restarted
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/${uid.stdout}"
  loop:
    - neon-node.service
