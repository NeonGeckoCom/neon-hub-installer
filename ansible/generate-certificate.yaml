---
- name: Check if self-signed certificate already exists
  ansible.builtin.stat:
    path: /home/neon/{{ common_name }}.crt
  register: cert_file
- name: Generate self-signed certificate for {{ common_name }} and primary IP
  ansible.builtin.command:
    cmd: >
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 
      -keyout /home/neon/{{ common_name }}.key 
      -out /home/neon/{{ common_name }}.crt 
      -subj "/C={{ country }}/ST={{ state }}/L={{ location }}/O={{ organization }}/OU={{ organizational_unit }}/CN={{ common_name }}"
      -addext "subjectAltName = DNS:{{ common_name }},IP:{{ primary_ip }}"
  become: yes
  when: not cert_file.stat.exists
- name: Set proper permissions for key and certificate
  ansible.builtin.file:
    path: "{{ item }}"
    owner: neon
    group: neon
    mode: "0600"
  loop:
    - /home/neon/{{ common_name }}.key
    - /home/neon/{{ common_name }}.crt
  become: yes
- name: Display certificate information
  ansible.builtin.command:
    cmd: openssl x509 -in /home/neon/{{ common_name }}.crt -text -noout
  register: cert_info
  changed_when: false
- name: Show certificate details
  ansible.builtin.debug:
    var: cert_info.stdout_lines
