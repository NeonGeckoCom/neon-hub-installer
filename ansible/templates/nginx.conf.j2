events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    server_tokens off;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # STT
    server {
        listen 443 ssl;
        server_name fasterwhisper.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://fasterwhisper:8080;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }

    # TTS
    server {
        listen 443 ssl;
        server_name coqui.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location = / {
            return 302 /gradio/;
        }

        location / {
            proxy_pass http://coqui:9666;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }

    # HTTP Services
    server {
        listen 443 ssl;
        server_name hana.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://hana:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Debug-Host $host;
            add_header X-Debug-Server-Name $server_name;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }

    server {
        listen 443 ssl;
        server_name iris.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://iris:7860;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }

server {
    listen 443 ssl;
    server_name iris-websat.{{ common_name }};

    ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

    location / {
        proxy_pass http://iris-websat:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }

    location /ws {
        proxy_pass http://iris-websat:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }

    location @fallback {
        return 503 "Service temporarily unavailable";
    }
}
    # RMQ Admin
    server {
        listen 443 ssl;
        server_name rmq-admin.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://rabbitmq:15672;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }

    # Yacht Container Management/Logs
    server {
        listen 443 ssl;
        server_name yacht.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://yacht:8000;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }
    # Neon Hub Config
    server {
        listen 443 ssl;
        server_name config.{{ common_name }};

        ssl_certificate /etc/ssl/certs/{{ common_name }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ common_name }}.key;

        location / {
            proxy_pass http://neon-hub-config:8005;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }
}